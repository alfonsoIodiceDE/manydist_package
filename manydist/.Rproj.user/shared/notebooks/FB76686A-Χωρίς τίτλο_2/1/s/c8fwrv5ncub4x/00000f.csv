"0","cat(""\\n=== PREPARING VARIABLES FOR CLUSTERING ANALYSIS ===\\n"")"
"1","\n=== PREPARING VARIABLES FOR CLUSTERING ANALYSIS ===\n"
"0","# Define variable categories for educational resilience clustering"
"0","resilience_variables <- list("
"0","  "
"0","  # Achievement variables (continuous)"
"0","  achievement = c(""MATH_AVG"", ""READ_AVG"", ""SCIE_AVG""),"
"0","  "
"0","  # Socioeconomic background (continuous)"
"0","  socioeconomic = c(""ESCS"", ""HISEI"", ""PAREDINT"", ""HOMEPOS"", ""ICTRES""),"
"0","  "
"0","  # Demographic variables (categorical)"
"0","  demographics = c(""ST004D01T"", ""GRADE"", ""IMMIG"", ""REPEAT"", ""LANGN""),"
"0","  "
"0","  # Motivation and attitudes (continuous)"
"0","  motivation = c(""ANXMAT"", ""MATHMOT"", ""MATHEFF"", ""SCIEEFF"", ""JOYSCIE"", ""INTMAT""),"
"0","  "
"0","  # Learning behaviors (continuous)  "
"0","  learning_behavior = c(""PERSEV"", ""TRUANCY"", ""HOMWRK"", ""DISCLIMA"", ""DIRINS"", ""PERFEED""),"
"0","  "
"0","  # Social-emotional factors (continuous)"
"0","  social_emotional = c(""BELONG"", ""TEACHSUP"", ""PEERREL"", ""BULLIED"", ""FAMSUP"", ""RELATST""),"
"0","  "
"0","  # Resilience indicators (continuous)"
"0","  resilience_factors = c(""LIFESAT"", ""EUDMO"", ""ATTSCHL"", ""EXPDEG"", ""GFOFAIL"", ""COMPETE""),"
"0","  "
"0","  # School context (mixed)"
"0","  school_context = c(""SCHSIZE"", ""SCHLTYPE"", ""STRATIO"", ""STAFFSHORT"", ""EDUSHORT"")"
"0",")"
"0",""
"0","# Create comprehensive variable list"
"0","all_clustering_vars <- unlist(resilience_variables, use.names = FALSE)"
"0",""
"0","# Identify available variables in the data"
"0","available_vars <- intersect(all_clustering_vars, names(all_cycles_data))"
"0","missing_vars <- setdiff(all_clustering_vars, names(all_cycles_data))"
"0",""
"0","cat(sprintf(""✓ Available clustering variables: %d out of %d\\n"", "
"0","            length(available_vars), length(all_clustering_vars)))"
"1","✓ Available clustering variables: 35 out of 42\n"
"0","if (length(missing_vars) > 0) {"
"0","  cat(""⚠ Missing variables:"", paste(missing_vars[1:min(5, length(missing_vars))], collapse = "", ""), "
"0","      ifelse(length(missing_vars) > 5, ""..."", """"), ""\\n"")"
"0","}"
"1","⚠ Missing variables:"
"1"," "
"1","INTMAT, PERSEV, TRUANCY, HOMWRK, PEERREL"
"1"," "
"1","..."
"1"," "
"1","\n"
"0","# Prepare clustering dataset"
"0","prepare_clustering_data <- function(data, variables, min_complete_pct = 0.7) {"
"0","  "
"0","  cat(""→ Preparing clustering dataset...\\n"")"
"0","  "
"0","  # Select available variables plus essential columns"
"0","  essential_cols <- c(""RESILIENT"", ""CYCLE"", ""W_FSTUWT"", ""CNTSTUID"", ""CNTSCHID"")"
"0","  available_essential <- intersect(essential_cols, names(data))"
"0","  "
"0","  clustering_data <- data[, c(variables, available_essential), with = FALSE]"
"0","  "
"0","  # Handle missing values"
"0","  cat(""→ Handling missing values...\\n"")"
"0","  "
"0","  # Calculate missingness per variable"
"0","  missing_summary <- clustering_data[, lapply(.SD, function(x) sum(is.na(x))/length(x)), "
"0","                                     .SDcols = variables]"
"0","  "
"0","  # Keep variables with sufficient data"
"0","  good_vars <- names(missing_summary)[missing_summary < (1 - min_complete_pct)]"
"0","  "
"0","  if (length(good_vars) < length(variables)) {"
"0","    dropped_vars <- setdiff(variables, good_vars)"
"0","    cat(sprintf(""⚠ Dropped %d variables due to missingness: %s\\n"", "
"0","                length(dropped_vars), paste(dropped_vars[1:min(3, length(dropped_vars))], collapse = "", "")))"
"0","  }"
"0","  "
"0","  # Filter to good variables"
"0","  final_vars <- c(good_vars, available_essential)"
"0","  clustering_data <- clustering_data[, final_vars, with = FALSE]"
"0","  "
"0","  # Remove cases with too much missingness"
"0","  initial_n <- nrow(clustering_data)"
"0","  complete_pct <- rowSums(!is.na(clustering_data[, good_vars, with = FALSE])) / length(good_vars)"
"0","  clustering_data <- clustering_data[complete_pct >= min_complete_pct]"
"0","  "
"0","  cat(sprintf(""✓ Retained %d students (%.1f%%) with sufficient data\\n"", "
"0","              nrow(clustering_data), 100 * nrow(clustering_data) / initial_n))"
"0","  "
"0","  # Convert categorical variables to factors"
"0","  categorical_vars <- c(""ST004D01T"", ""GRADE"", ""IMMIG"", ""REPEAT"", ""LANGN"", ""SCHLTYPE"")"
"0","  available_categorical <- intersect(categorical_vars, names(clustering_data))"
"0","  "
"0","  for (var in available_categorical) {"
"0","    clustering_data[[var]] <- as.factor(clustering_data[[var]])"
"0","  }"
"0","  "
"0","  cat(sprintf(""✓ Converted %d variables to factors\\n"", length(available_categorical)))"
"0","  "
"0","  return(list("
"0","    data = clustering_data,"
"0","    clustering_vars = good_vars,"
"0","    categorical_vars = available_categorical,"
"0","    continuous_vars = setdiff(good_vars, available_categorical)"
"0","  ))"
"0","}"
"0",""
"0","# Prepare the clustering dataset"
"0","clustering_result <- prepare_clustering_data(all_cycles_data, available_vars)"
"1","→ Preparing clustering dataset...\n"
"1","→ Handling missing values...\n"
"1","⚠ Dropped 16 variables due to missingness: ICTRES, ANXMAT, MATHMOT\n"
"1","✓ Retained 4543 students (100.0%) with sufficient data\n"
"1","✓ Converted 6 variables to factors\n"
"0","clustering_data <- clustering_result$data"
"0","final_clustering_vars <- clustering_result$clustering_vars"
"0","categorical_vars <- clustering_result$categorical_vars"
"0","continuous_vars <- clustering_result$continuous_vars"
"0",""
"0","cat(sprintf(""✓ Final clustering dataset: %d students × %d variables\\n"", "
"0","            nrow(clustering_data), length(final_clustering_vars)))"
"1","✓ Final clustering dataset: 4543 students × 19 variables\n"
"0","cat(sprintf(""  - Continuous variables: %d\\n"", length(continuous_vars)))"
"1","  - Continuous variables: 13\n"
"0","cat(sprintf(""  - Categorical variables: %d\\n"", length(categorical_vars)))"
"1","  - Categorical variables: 6\n"
