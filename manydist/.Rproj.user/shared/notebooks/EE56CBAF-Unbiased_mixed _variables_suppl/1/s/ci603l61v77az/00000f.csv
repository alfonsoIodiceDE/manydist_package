"0","CongruenceCoeff<-function(L1,L2){"
"0","L1<-dist(L1)"
"0","L2<-dist(L2)"
"0","CC<-sum(diag(t(L1) %*% L2)) / sqrt(sum(diag(t(L1) %*% L1))*sum(diag(t(L2) %*% L2)))"
"0","return(CC)"
"0","}"
"0",""
"0","LeHo<-function(X){  #  Returns the LeHo Distance (symmetric Kullback-Leibler)"
"0","#  X is matrix with conditional probabilities"
"0","#if(any(rowSums(X)!=1)){"
"0","#  print(""Input must be conditional probs (row sums should be 1)"")"
"0","#} else {"
"0",""
"0","require(philentropy)"
"0",""
"0","n<-nrow(X)"
"0","D<-matrix(0,n,n)"
"0","for (i in 1:(n-1)){"
"0","for (j in (i+1):n){"
"0","D[j,i]<-D[i,j]<-distance(X[c(i,j),],""kullback-leibler"",unit=""log2"")+"
"0","distance(X[c(j,i),],""kullback-leibler"",unit=""log2"")}"
"0",""
"0","}"
"0",""
"0","return(D)"
"0","}"
"0","#  }"
