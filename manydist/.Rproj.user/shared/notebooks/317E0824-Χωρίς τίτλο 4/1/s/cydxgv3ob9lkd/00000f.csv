"0","cat(""\n=== AKHANLI & HENNIG STABILITY-FIRST CLUSTERING ===\n"")"
"1","
=== AKHANLI & HENNIG STABILITY-FIRST CLUSTERING ===
"
"0","filter_solutions_by_size <- function(clusters, min_size_pct = 0.05) {"
"0","  cluster_sizes <- table(clusters)"
"0","  min_n <- ceiling(min_size_pct * length(clusters))"
"0","  return(!any(cluster_sizes < min_n))"
"0","}"
"0",""
"0","perform_stability_first_clustering <- function(enhanced_clustering_results, stability_threshold = 0.4) {"
"0","  stability_calibrated_results <- list()"
"0","  "
"0","  for (cycle_name in names(enhanced_clustering_results)) {"
"0","    result <- enhanced_clustering_results[[cycle_name]]"
"0","    "
"0","    cat(sprintf(""\n→ Applying stability-first approach for PISA %s...\n"", cycle_name))"
"0","    "
"0","    stable_solution <- NULL"
"0","    candidate_solutions <- list()"
"0","    "
"0","    for (dist_method in names(result$distance_results)) {"
"0","      if (!is.null(result$distance_results[[dist_method]])) {"
"0","        "
"0","        analysis <- result$distance_results[[dist_method]]$analysis"
"0","        "
"0","        if (!is.null(analysis)) {"
"0","          stats_matrix <- extract_clusterbenchstats_matrix(analysis)"
"0","          "
"0","          if (!is.null(stats_matrix)) {"
"0","            dist_matrix <- result$distance_matrices[[dist_method]]$matrix"
"0","            "
"0","            for (solution_name in rownames(stats_matrix)) {"
"0","              parts <- strsplit(solution_name, ""\\."")[[1]]"
"0","              method_name <- parts[1]"
"0","              k_value <- as.numeric(parts[2])"
"0","              "
"0","              # Generate clusters"
"0","              if (method_name == ""Ward"") {"
"0","                hc <- hclust(dist_matrix, method = ""ward.D2"")"
"0","                test_clusters <- cutree(hc, k = k_value)"
"0","              } else if (method_name == ""PAM"") {"
"0","                test_clusters <- pam(dist_matrix, k = k_value, diss = TRUE)$clustering"
"0","              }"
"0","              "
"0","              if (!filter_solutions_by_size(test_clusters, min_size_pct = 0.05)) {"
"0","                next"
"0","              }"
"0","              "
"0","              cat(sprintf(""    Testing stability: %s %s k=%d..."", dist_method, method_name, k_value))"
"0","              "
"0","              tryCatch({"
"0","                if (method_name == ""Ward"") {"
"0","                  boot_result <- clusterboot("
"0","                    data = dist_matrix, B = 25, distances = TRUE, bootmethod = ""boot"","
"0","                    clustermethod = disthclustCBI, k = k_value, method = ""ward.D2"","
"0","                    cut = ""number"", seed = 42, count = FALSE"
"0","                  )"
"0","                } else if (method_name == ""PAM"") {"
"0","                  boot_result <- clusterboot("
"0","                    data = dist_matrix, B = 25, distances = TRUE, bootmethod = ""boot"","
"0","                    clustermethod = pamkCBI, k = k_value, usepam = TRUE, seed = 42, count = FALSE"
"0","                  )"
"0","                }"
"0","                "
"0","                overall_stability <- mean(boot_result$bootmean, na.rm = TRUE)"
"0","                cat(sprintf("" Stability: %.3f\n"", overall_stability))"
"0","                "
"0","                if (overall_stability >= stability_threshold) {"
"0","                  original_scores <- stats_matrix[solution_name, ]"
"0","                  "
"0","                  candidate_solutions[[paste(dist_method, solution_name, sep = ""_"")]] <- list("
"0","                    solution = solution_name,"
"0","                    method = method_name,"
"0","                    k = k_value,"
"0","                    distance_method = dist_method,"
"0","                    stability_score = overall_stability,"
"0","                    original_scores = original_scores,"
"0","                    passed_stability = TRUE"
"0","                  )"
"0","                  "
"0","                  cat(sprintf(""      ✓ PASSED stability filter (%.3f >= %.3f)\n"", "
"0","                              overall_stability, stability_threshold))"
"0","                } else {"
"0","                  cat(sprintf(""      ✗ FAILED stability filter (%.3f < %.3f)\n"", "
"0","                              overall_stability, stability_threshold))"
"0","                }"
"0","                "
"0","              }, error = function(e) {"
"0","                cat(sprintf("" ERROR: %s\n"", e$message))"
"0","              })"
"0","            }"
"0","          }"
"0","        }"
"0","      }"
"0","    }"
"0","    "
"0","    if (length(candidate_solutions) > 0) {"
"0","      cat(sprintf(""  → Found %d stable solutions\n"", length(candidate_solutions)))"
"0","      "
"0","      available_stats <- names(candidate_solutions[[1]]$original_scores)"
"0","      weights <- develop_intervention_weights(available_stats)"
"0","      "
"0","      best_score <- -Inf"
"0","      best_solution <- NULL"
"0","      "
"0","      for (sol_name in names(candidate_solutions)) {"
"0","        sol <- candidate_solutions[[sol_name]]"
"0","        "
"0","        valid_indices <- !is.na(sol$original_scores) & is.finite(sol$original_scores)"
"0","        "
"0","        if (sum(valid_indices) > 0) {"
"0","          composite_score <- weighted.mean("
"0","            sol$original_scores[valid_indices], "
"0","            weights[valid_indices], "
"0","            na.rm = TRUE"
"0","          )"
"0","          "
"0","          stability_weighted_score <- composite_score * sol$stability_score"
"0","          "
"0","          if (stability_weighted_score > best_score) {"
"0","            best_score <- stability_weighted_score"
"0","            best_solution <- sol"
"0","            best_solution$composite_score <- composite_score"
"0","            best_solution$final_score <- stability_weighted_score"
"0","          }"
"0","        }"
"0","      }"
"0","      "
"0","      stable_solution <- best_solution"
"0","      "
"0","      if (!is.null(best_solution)) {"
"0","        cat(sprintf(""  ✓ Best stable solution: %s %s k=%d (Stability: %.3f, Final: %.3f)\n"","
"0","                    best_solution$distance_method, best_solution$method, "
"0","                    best_solution$k, best_solution$stability_score, best_solution$final_score))"
"0","      }"
"0","      "
"0","    } else {"
"0","      cat(sprintf(""  ✗ No stable solutions found (threshold %.3f)\n"", stability_threshold))"
"0","    }"
"0","    "
"0","    stability_calibrated_results[[cycle_name]] <- list("
"0","      original_results = result,"
"0","      stable_solution = stable_solution,"
"0","      stability_threshold = stability_threshold"
"0","    )"
"0","  }"
"0","  "
"0","  return(stability_calibrated_results)"
"0","}"
"0",""
"0","extract_final_clusters <- function(stability_calibrated_results) {"
"0","  all_cluster_assignments <- list()"
"0","  "
"0","  for (cycle_name in names(stability_calibrated_results)) {"
"0","    result <- stability_calibrated_results[[cycle_name]]"
"0","    "
"0","    cat(sprintf(""\n→ Extracting clusters for PISA %s...\n"", cycle_name))"
"0","    "
"0","    stable_sol <- result$stable_solution"
"0","    "
"0","    if (!is.null(stable_sol)) {"
"0","      original_result <- result$original_results"
"0","      dist_method <- stable_sol$distance_method"
"0","      dist_matrix <- original_result$distance_matrices[[dist_method]]$matrix"
"0","      "
"0","      method_name <- stable_sol$method"
"0","      k_value <- stable_sol$k"
"0","      "
"0","      if (method_name == ""Ward"") {"
"0","        hc <- hclust(dist_matrix, method = ""ward.D2"")"
"0","        clusters <- cutree(hc, k = k_value)"
"0","      } else if (method_name == ""PAM"") {"
"0","        clusters <- pam(dist_matrix, k = k_value, diss = TRUE)$clustering"
"0","      }"
"0","      "
"0","      all_cluster_assignments[[cycle_name]] <- list("
"0","        clusters = clusters,"
"0","        method = method_name,"
"0","        k = k_value,"
"0","        distance_method = dist_method,"
"0","        cycle = cycle_name,"
"0","        solution_name = stable_sol$solution,"
"0","        stability_score = stable_sol$stability_score,"
"0","        final_score = stable_sol$final_score"
"0","      )"
"0","      "
"0","      cluster_dist <- table(clusters)"
"0","      cat(sprintf(""  ✓ %s k=%d (Stability: %.3f, Final: %.3f)\n"","
"0","                  stable_sol$solution, k_value, stable_sol$stability_score, stable_sol$final_score))"
"0","      cat(sprintf(""    Distribution: %s\n"", paste(names(cluster_dist), ""="", cluster_dist, collapse = "", "")))"
"0","      "
"0","    } else {"
"0","      cat(sprintf(""  ✗ No stable solution found\n""))"
"0","    }"
"0","  }"
"0","  "
"0","  return(all_cluster_assignments)"
"0","}"
"0",""
"0","add_clusters_to_data <- function(cycle_prepared_data, cluster_assignments) {"
"0","  enhanced_data_with_clusters <- list()"
"0","  "
"0","  for (cycle_name in names(cycle_prepared_data)) {"
"0","    if (!is.null(cycle_prepared_data[[cycle_name]])) {"
"0","      enhanced_data_with_clusters[[cycle_name]] <- cycle_prepared_data[[cycle_name]]"
"0","      "
"0","      if (cycle_name %in% names(cluster_assignments)) {"
"0","        cluster_info <- cluster_assignments[[cycle_name]]"
"0","        enhanced_data_with_clusters[[cycle_name]]$data$CLUSTER_INTERVENTION <- cluster_info$clusters"
"0","        enhanced_data_with_clusters[[cycle_name]]$cluster_info_intervention <- cluster_info"
"0","      }"
"0","    }"
"0","  }"
"0","  "
"0","  return(enhanced_data_with_clusters)"
"0","}"
"0",""
"0","# Execute the Akhanli & Hennig approach"
"0","akhanli_hennig_results <- perform_stability_first_clustering(enhanced_clustering_results, stability_threshold = 0.4)"
"1","
→ Applying stability-first approach for PISA 2015...
"
"1","    Testing stability: gower_baseline PAM k=2..."
"1"," Stability: 0.711
"
"1","      ✓ PASSED stability filter (0.711 >= 0.400)
"
"1","    Testing stability: gower_baseline PAM k=3..."
"1"," Stability: 0.649
"
"1","      ✓ PASSED stability filter (0.649 >= 0.400)
"
"1","  → Found 2 stable solutions
"
"1","  ✓ Best stable solution: gower_baseline PAM k=3 (Stability: 0.649, Final: -0.288)
"
"1","
→ Applying stability-first approach for PISA 2018...
"
"1","    Testing stability: gower_baseline PAM k=2..."
"1"," Stability: 0.754
"
"1","      ✓ PASSED stability filter (0.754 >= 0.400)
"
"1","    Testing stability: gower_baseline PAM k=3..."
"1"," Stability: 0.596
"
"1","      ✓ PASSED stability filter (0.596 >= 0.400)
"
"1","  → Found 2 stable solutions
"
"1","  ✓ Best stable solution: gower_baseline PAM k=3 (Stability: 0.596, Final: 0.057)
"
"1","
→ Applying stability-first approach for PISA 2022...
"
"1","    Testing stability: gower_baseline PAM k=2..."
"1"," Stability: 0.693
"
"1","      ✓ PASSED stability filter (0.693 >= 0.400)
"
"1","    Testing stability: gower_baseline PAM k=3..."
"1"," ERROR: missing value where TRUE/FALSE needed
"
"1","  → Found 1 stable solutions
"
"1","  ✓ Best stable solution: gower_baseline PAM k=2 (Stability: 0.693, Final: -0.253)
"
"0","final_clusters <- extract_final_clusters(akhanli_hennig_results)"
"1","
→ Extracting clusters for PISA 2015...
"
"1","  ✓ PAM.3 k=3 (Stability: 0.649, Final: -0.288)
"
"1","    Distribution: 1 = 551, 2 = 295, 3 = 527
"
"1","
→ Extracting clusters for PISA 2018...
"
"1","  ✓ PAM.3 k=3 (Stability: 0.596, Final: 0.057)
"
"1","    Distribution: 1 = 446, 2 = 595, 3 = 552
"
"1","
→ Extracting clusters for PISA 2022...
"
"1","  ✓ PAM.2 k=2 (Stability: 0.693, Final: -0.253)
"
"1","    Distribution: 1 = 787, 2 = 792
"
"0","enhanced_data_with_clusters <- add_clusters_to_data(cycle_prepared_data, final_clusters)"
"0",""
"0","cat(""\n=== AKHANLI & HENNIG COMPLIANCE SUMMARY ===\n"")"
"1","
=== AKHANLI & HENNIG COMPLIANCE SUMMARY ===
"
"0","for (cycle_name in names(akhanli_hennig_results)) {"
"0","  result <- akhanli_hennig_results[[cycle_name]]"
"0","  sol <- result$stable_solution"
"0","  "
"0","  cat(sprintf(""\nPISA %s:\n"", cycle_name))"
"0","  if (!is.null(sol)) {"
"0","    cat(sprintf(""  INTERVENTION: ✓ STABLE (%.3f) %s k=%d\n"", "
"0","                sol$stability_score, sol$solution, sol$k))"
"0","  } else {"
"0","    cat(sprintf(""  INTERVENTION: ✗ NO STABLE SOLUTION FOUND\n""))"
"0","  }"
"0","}"
"1","
PISA 2015:
"
"1","  INTERVENTION: ✓ STABLE (0.649) PAM.3 k=3
"
"1","
PISA 2018:
"
"1","  INTERVENTION: ✓ STABLE (0.596) PAM.3 k=3
"
"1","
PISA 2022:
"
"1","  INTERVENTION: ✓ STABLE (0.693) PAM.2 k=2
"
"0","cat(""\n✓ Akhanli & Hennig (2020) framework implemented\n"")"
"1","
✓ Akhanli & Hennig (2020) framework implemented
"
"0","cat(""✓ Stability filtering applied before composite scoring\n"")"
"1","✓ Stability filtering applied before composite scoring
"
"0","cat(""✓ Variable weighting maintained within stable solutions\n"")"
"1","✓ Variable weighting maintained within stable solutions
"
