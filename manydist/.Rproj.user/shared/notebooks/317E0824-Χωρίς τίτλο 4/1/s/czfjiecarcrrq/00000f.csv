"0","cat(""\n=== VARIABLE DISTRIBUTION ANALYSIS FOR TRANSFORMATION DECISIONS ===\n"")"
"1","
=== VARIABLE DISTRIBUTION ANALYSIS FOR TRANSFORMATION DECISIONS ===
"
"0","# Function to analyze variable distributions and suggest transformations"
"0","analyze_variable_distributions <- function(cycle_data_info, cycle_name) {"
"0","  "
"0","  cat(sprintf(""\n→ Analyzing variable distributions for PISA %s...\n"", cycle_name))"
"0","  "
"0","  # Get the clustering variables data"
"0","  data_for_analysis <- cycle_data_info$data[, cycle_data_info$clustering_vars, with = FALSE]"
"0","  continuous_vars <- cycle_data_info$continuous_vars"
"0","  categorical_vars <- cycle_data_info$categorical_vars"
"0","  "
"0","  # Remove missing values for analysis"
"0","  data_for_analysis <- na.omit(data_for_analysis)"
"0","  "
"0","  cat(sprintf(""Analyzing %d continuous and %d categorical variables\n"", "
"0","              length(continuous_vars), length(categorical_vars)))"
"0","  "
"0","  # Analyze continuous variables"
"0","  continuous_analysis <- list()"
"0","  transformation_recommendations <- list()"
"0","  "
"0","  for (var in continuous_vars) {"
"0","    if (var %in% names(data_for_analysis)) {"
"0","      "
"0","      var_data <- data_for_analysis[[var]]"
"0","      "
"0","      # Basic statistics"
"0","      var_stats <- list("
"0","        mean = mean(var_data, na.rm = TRUE),"
"0","        median = median(var_data, na.rm = TRUE),"
"0","        sd = sd(var_data, na.rm = TRUE),"
"0","        min = min(var_data, na.rm = TRUE),"
"0","        max = max(var_data, na.rm = TRUE),"
"0","        skewness = moments::skewness(var_data, na.rm = TRUE),"
"0","        kurtosis = moments::kurtosis(var_data, na.rm = TRUE),"
"0","        n_zeros = sum(var_data == 0, na.rm = TRUE),"
"0","        n_missing = sum(is.na(var_data))"
"0","      )"
"0","      "
"0","      # Determine variable type and transformation recommendation"
"0","      transformation_rec <- ""none"""
"0","      rationale <- ""Normal-ish distribution"""
"0","      "
"0","      # Achievement variables - usually don't transform (linear importance)"
"0","      if (var %in% c(""MATH_AVG"", ""READ_AVG"", ""SCIE_AVG"")) {"
"0","        transformation_rec <- ""none"""
"0","        rationale <- ""Achievement scores count linearly in education (like goals in football)"""
"0","      }"
"0","      "
"0","      # Count-like variables with high skewness"
"0","      else if (abs(var_stats$skewness) > 2 && var_stats$min >= 0) {"
"0","        if (var_stats$n_zeros > nrow(data_for_analysis) * 0.1) {"
"0","          transformation_rec <- ""sqrt_plus_c"""
"0","          rationale <- ""High skewness with many zeros - reduce upper-end variation"""
"0","        } else {"
"0","          transformation_rec <- ""log_plus_c"""
"0","          rationale <- ""High right skewness - reduce upper-end variation"""
"0","        }"
"0","      }"
"0","      "
"0","      # Variables with extreme kurtosis"
"0","      else if (var_stats$kurtosis > 10) {"
"0","        transformation_rec <- ""sqrt_plus_c"""
"0","        rationale <- ""Heavy tails - moderate transformation needed"""
"0","      }"
"0","      "
"0","      # SES variables (typically already well-scaled)"
"0","      else if (var %in% c(""ESCS"", ""HISEI"", ""HOMEPOS"", ""WEALTH"")) {"
"0","        transformation_rec <- ""none"""
"0","        rationale <- ""SES indices typically well-scaled"""
"0","      }"
"0","      "
"0","      continuous_analysis[[var]] <- list("
"0","        stats = var_stats,"
"0","        transformation = transformation_rec,"
"0","        rationale = rationale"
"0","      )"
"0","    }"
"0","  }"
"0","  "
"0","  # Display analysis results"
"0","  cat(""\n=== CONTINUOUS VARIABLE ANALYSIS ===\n"")"
"0","  cat(sprintf(""%-15s %8s %8s %8s %6s %6s %15s %s\n"", "
"0","              ""Variable"", ""Mean"", ""Median"", ""SD"", ""Skew"", ""Kurt"", ""Transform"", ""Rationale""))"
"0","  cat(paste(rep(""-"", 90), collapse = """"), ""\n"")"
"0","  "
"0","  for (var in names(continuous_analysis)) {"
"0","    stats <- continuous_analysis[[var]]$stats"
"0","    trans <- continuous_analysis[[var]]$transformation"
"0","    rationale <- continuous_analysis[[var]]$rationale"
"0","    "
"0","    cat(sprintf(""%-15s %8.2f %8.2f %8.2f %6.2f %6.2f %15s %s\n"","
"0","                substr(var, 1, 15),"
"0","                stats$mean, stats$median, stats$sd, "
"0","                stats$skewness, stats$kurtosis,"
"0","                trans, substr(rationale, 1, 30)))"
"0","  }"
"0","  "
"0","  # Transformation summary"
"0","  transform_counts <- table(sapply(continuous_analysis, function(x) x$transformation))"
"0","  cat(""\n=== TRANSFORMATION RECOMMENDATIONS SUMMARY ===\n"")"
"0","  for (transform_type in names(transform_counts)) {"
"0","    vars_needing_transform <- names(continuous_analysis)[sapply(continuous_analysis, "
"0","                                                                function(x) x$transformation == transform_type)]"
"0","    cat(sprintf(""%s (%d variables): %s\n"", "
"0","                transform_type, transform_counts[transform_type],"
"0","                paste(head(vars_needing_transform, 5), collapse = "", "")))"
"0","  }"
"0","  "
"0","  return(list("
"0","    continuous_analysis = continuous_analysis,"
"0","    transformation_recommendations = transformation_recommendations,"
"0","    cycle = cycle_name"
"0","  ))"
"0","}"
"0",""
"0","# Function to create distribution plots for key variables"
"0","create_distribution_plots <- function(cycle_data_info, cycle_name, max_vars = 12) {"
"0","  "
"0","  cat(sprintf(""\n→ Creating distribution plots for PISA %s key variables...\n"", cycle_name))"
"0","  "
"0","  data_for_plots <- cycle_data_info$data[, cycle_data_info$clustering_vars, with = FALSE]"
"0","  continuous_vars <- cycle_data_info$continuous_vars"
"0","  "
"0","  # Select key variables for plotting"
"0","  key_vars <- c()"
"0","  "
"0","  # Always include achievement if available"
"0","  achievement_vars <- intersect(c(""MATH_AVG"", ""READ_AVG"", ""SCIE_AVG""), continuous_vars)"
"0","  key_vars <- c(key_vars, achievement_vars)"
"0","  "
"0","  # Include SES variables"
"0","  ses_vars <- intersect(c(""ESCS"", ""HISEI"", ""HOMEPOS"", ""WEALTH""), continuous_vars)"
"0","  key_vars <- c(key_vars, head(ses_vars, 3))"
"0","  "
"0","  # Include motivation variables"
"0","  motivation_vars <- intersect(c(""ANXTEST"", ""ANXMAT"", ""MATHEFF"", ""SCIEEFF"", ""JOYSCIE"", ""TEACHSUP""), "
"0","                               continuous_vars)"
"0","  key_vars <- c(key_vars, head(motivation_vars, 4))"
"0","  "
"0","  # Limit to max_vars"
"0","  key_vars <- head(unique(key_vars), max_vars)"
"0","  "
"0","  # Create plots"
"0","  plot_list <- list()"
"0","  "
"0","  for (var in key_vars) {"
"0","    if (var %in% names(data_for_plots)) {"
"0","      "
"0","      var_data <- data_for_plots[[var]]"
"0","      var_data <- var_data[!is.na(var_data)]"
"0","      "
"0","      if (length(var_data) > 0) {"
"0","        # Calculate statistics for subtitle"
"0","        skew_val <- round(moments::skewness(var_data, na.rm = TRUE), 2)"
"0","        kurt_val <- round(moments::kurtosis(var_data, na.rm = TRUE), 2)"
"0","        "
"0","        p <- ggplot(data.frame(x = var_data), aes(x = x)) +"
"0","          geom_histogram(bins = 30, fill = ""lightblue"", alpha = 0.7, color = ""black"") +"
"0","          geom_density(aes(y = after_stat(density) * length(var_data) * diff(range(var_data))/30), "
"0","                       color = ""red"", linewidth = 1) +"
"0","          labs(title = var,"
"0","               subtitle = paste(""Skewness:"", skew_val, ""| Kurtosis:"", kurt_val),"
"0","               x = ""Value"", y = ""Frequency"") +"
"0","          theme_minimal() +"
"0","          theme(plot.title = element_text(size = 10, face = ""bold""),"
"0","                plot.subtitle = element_text(size = 8))"
"0","        "
"0","        plot_list[[var]] <- p"
"0","      }"
"0","    }"
"0","  }"
"0","  "
"0","  # Display plots in grid"
"0","  if (length(plot_list) > 0) {"
"0","    n_plots <- length(plot_list)"
"0","    n_cols <- min(4, ceiling(sqrt(n_plots)))"
"0","    n_rows <- ceiling(n_plots / n_cols)"
"0","    "
"0","    grid_plot <- do.call(gridExtra::grid.arrange, c(plot_list, ncol = n_cols))"
"0","    print(grid_plot)"
"0","  }"
"0","  "
"0","  return(plot_list)"
"0","}"
"0",""
"0","# Function to apply transformations based on analysis"
"0","apply_akhanli_hennig_transformations <- function(cycle_data_info, distribution_analysis) {"
"0","  "
"0","  cat(""\n→ Applying Akhanli & Hennig transformations...\n"")"
"0","  "
"0","  transformed_data <- copy(cycle_data_info$data)"
"0","  transformation_log <- list()"
"0","  "
"0","  for (var in names(distribution_analysis$continuous_analysis)) {"
"0","    "
"0","    analysis <- distribution_analysis$continuous_analysis[[var]]"
"0","    transform_type <- analysis$transformation"
"0","    "
"0","    if (transform_type != ""none"" && var %in% names(transformed_data)) {"
"0","      "
"0","      original_data <- transformed_data[[var]]"
"0","      "
"0","      if (transform_type == ""log_plus_c"") {"
"0","        # Determine appropriate constant c"
"0","        min_val <- min(original_data, na.rm = TRUE)"
"0","        c_value <- if (min_val <= 0) abs(min_val) + 0.1 else 0.1"
"0","        transformed_data[[paste0(var, ""_TRANS"")]] <- log(original_data + c_value)"
"0","        transformation_log[[var]] <- paste(""log(x +"", round(c_value, 2), "")"")"
"0","        "
"0","      } else if (transform_type == ""sqrt_plus_c"") {"
"0","        # Determine appropriate constant c"
"0","        min_val <- min(original_data, na.rm = TRUE)"
"0","        c_value <- if (min_val < 0) abs(min_val) + 0.1 else 0"
"0","        transformed_data[[paste0(var, ""_TRANS"")]] <- sqrt(original_data + c_value)"
"0","        transformation_log[[var]] <- paste(""sqrt(x +"", round(c_value, 2), "")"")"
"0","      }"
"0","      "
"0","      cat(sprintf(""  %s: %s (rationale: %s)\n"", "
"0","                  var, transformation_log[[var]], analysis$rationale))"
"0","    }"
"0","  }"
"0","  "
"0","  # Update clustering variables list to include transformed versions"
"0","  new_clustering_vars <- cycle_data_info$clustering_vars"
"0","  "
"0","  for (var in names(transformation_log)) {"
"0","    trans_var <- paste0(var, ""_TRANS"")"
"0","    if (trans_var %in% names(transformed_data)) {"
"0","      # Replace original with transformed version"
"0","      new_clustering_vars[new_clustering_vars == var] <- trans_var"
"0","    }"
"0","  }"
"0","  "
"0","  # Update the data info"
"0","  updated_data_info <- cycle_data_info"
"0","  updated_data_info$data <- transformed_data"
"0","  updated_data_info$clustering_vars <- new_clustering_vars"
"0","  updated_data_info$transformation_log <- transformation_log"
"0","  "
"0","  cat(sprintf(""✓ Applied %d transformations\n"", length(transformation_log)))"
"0","  "
"0","  return(updated_data_info)"
"0","}"
"0",""
"0","# Load required package for skewness/kurtosis"
"0","if (!requireNamespace(""moments"", quietly = TRUE)) {"
"0","  install.packages(""moments"")"
"0","}"
"0","library(moments)"
"0",""
"0","# Run distribution analysis for each cycle"
"0","distribution_analyses <- list()"
"0",""
"0","for (cycle_name in names(cycle_prepared_data)) {"
"0","  if (!is.null(cycle_prepared_data[[cycle_name]])) {"
"0","    "
"0","    # Analyze distributions"
"0","    distribution_analyses[[cycle_name]] <- analyze_variable_distributions("
"0","      cycle_prepared_data[[cycle_name]], cycle_name)"
"0","    "
"0","    # Create distribution plots"
"0","    cat(sprintf(""\n=== DISTRIBUTION PLOTS FOR PISA %s ===\n"", cycle_name))"
"0","    distribution_plots <- create_distribution_plots("
"0","      cycle_prepared_data[[cycle_name]], cycle_name, max_vars = 12)"
"0","  }"
"0","}"
"1","
→ Analyzing variable distributions for PISA 2018...
"
"1","Analyzing 31 continuous and 3 categorical variables
"
"1","
=== CONTINUOUS VARIABLE ANALYSIS ===
"
"1","Variable            Mean   Median       SD   Skew   Kurt       Transform Rationale
"
"1","------------------------------------------------------------------------------------------"
"1"," "
"1","
"
"1","MATH_AVG          417.93   417.20    74.60   0.01   2.69            none Achievement scores count linea
"
"1","READ_AVG          386.30   384.93    78.09   0.10   2.57            none Achievement scores count linea
"
"1","SCIE_AVG          420.95   415.64    74.26   0.16   2.64            none Achievement scores count linea
"
"1","ESCS               -1.27    -1.16     0.44  -2.48  17.59     sqrt_plus_c Heavy tails - moderate transfo
"
"1","HISEI              26.97    25.95     9.17   1.45   7.05            none SES indices typically well-sca
"
"1","HOMEPOS            -0.97    -0.90     0.71  -2.22  20.46     sqrt_plus_c Heavy tails - moderate transfo
"
"1","ICTRES             -0.88    -0.88     0.77  -0.38   5.34            none Normal-ish distribution
"
"1","HEDRES             -0.63    -0.69     0.94  -0.33   5.42            none Normal-ish distribution
"
"1","WEALTH             -0.90    -0.83     0.74  -1.94  15.40     sqrt_plus_c Heavy tails - moderate transfo
"
"1","JOYREAD            -0.03    -0.04     0.79   0.14   4.24            none Normal-ish distribution
"
"1","WORKMAST            0.14    -0.10     0.99  -0.07   2.79            none Normal-ish distribution
"
"1","MASTGOAL           -0.22    -0.32     0.99   0.10   2.85            none Normal-ish distribution
"
"1","GFOFAIL            -0.08    -0.13     0.94   0.15   2.79            none Normal-ish distribution
"
"1","COMPETE            -0.14    -0.20     0.91   0.23   3.34            none Normal-ish distribution
"
"1","METASUM            -0.14     0.21     0.91  -0.38   2.14            none Normal-ish distribution
"
"1","ADAPTIVITY         -0.16    -0.17     0.97   0.01   3.27            none Normal-ish distribution
"
"1","GCSELFEFF          -0.10    -0.14     0.93  -0.03   4.22            none Normal-ish distribution
"
"1","BELONG             -0.09    -0.32     0.88   1.01   5.09            none Normal-ish distribution
"
"1","TEACHSUP           -0.08    -0.09     0.97  -0.41   2.92            none Normal-ish distribution
"
"1","EMOSUPS            -0.25    -0.66     1.01  -0.11   1.91            none Normal-ish distribution
"
"1","CLSIZE             22.65    23.00     4.53   1.46  10.82     sqrt_plus_c Heavy tails - moderate transfo
"
"1","SCHSIZE           244.82   225.00   126.21   1.22   6.40            none Normal-ish distribution
"
"1","STRATIO             9.35     9.53     2.85   1.02   7.71            none Normal-ish distribution
"
"1","STAFFSHORT          0.16     0.04     1.08   0.22   2.47            none Normal-ish distribution
"
"1","EDUSHORT            0.77     0.80     0.94   0.02   3.39            none Normal-ish distribution
"
"1","RATCMP1             0.27     0.21     0.20   2.54  14.17      log_plus_c High right skewness - reduce u
"
"1","RATCMP2             0.98     1.00     0.07  -4.32  23.53      log_plus_c High right skewness - reduce u
"
"1","STUBEHA            -0.05    -0.10     1.12  -0.39   3.97            none Normal-ish distribution
"
"1","TEACHBEHA          -0.14    -0.13     1.05   0.08   2.77            none Normal-ish distribution
"
"1","BEINGBULLIED        0.09    -0.78     1.02   0.93   3.40            none Normal-ish distribution
"
"1","DISCLIMA           -0.31    -0.30     0.92  -0.09   3.83            none Normal-ish distribution
"
"1","
=== TRANSFORMATION RECOMMENDATIONS SUMMARY ===
"
"1","log_plus_c (2 variables): RATCMP1, RATCMP2
"
"1","none (25 variables): MATH_AVG, READ_AVG, SCIE_AVG, HISEI, ICTRES
"
"1","sqrt_plus_c (4 variables): ESCS, HOMEPOS, WEALTH, CLSIZE
"
"1","
=== DISTRIBUTION PLOTS FOR PISA 2018 ===
"
"1","
→ Creating distribution plots for PISA 2018 key variables...
"
"1","TableGrob ("
"1",""
"1","3"
"1",""
"1"," x "
"1",""
"1","3"
"1",""
"1",") """
"1",""
"1","arrange"
"1",""
"1",""": "
"1",""
"1","7"
"1",""
"1"," grobs
"
