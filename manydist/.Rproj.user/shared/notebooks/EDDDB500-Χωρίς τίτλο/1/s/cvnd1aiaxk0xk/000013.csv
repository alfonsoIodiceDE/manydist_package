"0",""
"0","# 2. Individual metrics heatmap"
"0","plot_metrics_heatmap <- function(calibrated_df, clustering_type) {"
"0","  "
"0","  # Prepare data for heatmap"
"0","  metrics_cols <- c(""within_dissim_calibrated"", ""separation_calibrated"", "
"0","                    ""entropy_calibrated"", ""pearson_gamma_calibrated"")"
"0","  "
"0","  heatmap_data <- calibrated_df[, c(""distance_method"", ""clustering_method"", ""k"", metrics_cols)]"
"0","  "
"0","  # Reshape for heatmap"
"0","  heatmap_long <- heatmap_data %>%"
"0","    mutate(method_k = paste0(distance_method, "" + "", clustering_method, "" (K="", k, "")"")) %>%"
"0","    select(method_k, all_of(metrics_cols)) %>%"
"0","    pivot_longer(cols = all_of(metrics_cols), names_to = ""metric"", values_to = ""value"")"
"0","  "
"0","  # Clean metric names"
"0","  heatmap_long$metric <- gsub(""_calibrated"", """", heatmap_long$metric)"
"0","  heatmap_long$metric <- gsub(""_"", "" "", heatmap_long$metric)"
"0","  heatmap_long$metric <- tools::toTitleCase(heatmap_long$metric)"
"0","  "
"0","  # Create heatmap"
"0","  p <- ggplot(heatmap_long, aes(x = metric, y = method_k, fill = value)) +"
"0","    geom_tile(color = ""white"", linewidth = 0.1) +"
"0","    scale_fill_gradient2(low = ""red"", mid = ""white"", high = ""blue"", "
"0","                         midpoint = 0, name = ""Calibrated\\nScore"") +"
"0","    labs(title = paste(""Clustering Quality Metrics Heatmap -"", "
"0","                       tools::toTitleCase(clustering_type), ""Level""),"
"0","         x = ""Quality Metric"","
"0","         y = ""Distance Method + Clustering Algorithm (K)"") +"
"0","    theme_minimal() +"
"0","    theme(axis.text.x = element_text(angle = 45, hjust = 1),"
"0","          axis.text.y = element_text(size = 8),"
"0","          plot.title = element_text(size = 14, face = ""bold"")) +"
"0","    coord_fixed(ratio = 0.3)"
"0","  "
"0","  return(p)"
"0","}"
"0",""
"0","# Generate heatmaps (limit to top 15 results for readability)"
"0","top_macro_heatmap <- plot_metrics_heatmap(head(calibrated_macro[order(calibrated_macro$composite_index, decreasing = TRUE), ], 15), ""macro"")"
"0","top_micro_heatmap <- plot_metrics_heatmap(head(calibrated_micro[order(calibrated_micro$composite_index, decreasing = TRUE), ], 15), ""micro"")"
"0",""
"0","print(top_macro_heatmap)"
