"0","cat(""\\n=== EDUCATIONAL INTERPRETATION AND POLICY IMPLICATIONS ===\\n"")"
"1","\n=== EDUCATIONAL INTERPRETATION AND POLICY IMPLICATIONS ===\n"
"0","# Generate educational insights from optimal clusterings"
"0","# Fixed Educational Interpretation Function"
"0","generate_educational_insights_fixed <- function(analysis_result, clustering_type) {"
"0","  "
"0","  cat(sprintf(""\n--- Educational Insights: %s Level ---\n"", "
"0","              tools::toTitleCase(clustering_type)))"
"0","  "
"0","  data_with_clusters <- analysis_result$data"
"0","  optimal_params <- analysis_result$optimal_params"
"0","  "
"0","  # Cluster characterization based on available variables"
"0","  characterization_vars <- intersect("
"0","    c(""ESCS"", ""MATH_AVG"", ""READ_AVG"", ""SCIE_AVG"", ""ANXMAT"", ""MATHMOT"", "
"0","      ""PERSEV"", ""BELONG"", ""TEACHSUP"", ""LIFESAT"", ""ATTSCHL""),"
"0","    names(data_with_clusters)"
"0","  )"
"0","  "
"0","  if (length(characterization_vars) > 0) {"
"0","    cat(""\nCluster Characterization (Mean Values):\n"")"
"0","    "
"0","    cluster_profiles <- data_with_clusters[, lapply(.SD, function(x) {"
"0","      round(mean(x, na.rm = TRUE), 3)"
"0","    }), .SDcols = characterization_vars, by = cluster]"
"0","    "
"0","    print(cluster_profiles)"
"0","    "
"0","    # Calculate overall means for comparison"
"0","    overall_means <- data_with_clusters[, lapply(.SD, function(x) {"
"0","      mean(x, na.rm = TRUE)"
"0","    }), .SDcols = characterization_vars]"
"0","    "
"0","    # Identify distinctive features for each cluster"
"0","    cat(""\nDistinctive Cluster Features:\n"")"
"0","    "
"0","    for (i in unique(data_with_clusters$cluster)) {"
"0","      cat(sprintf(""\nCluster %d Profile:\n"", i))"
"0","      "
"0","      cluster_data <- cluster_profiles[cluster == i]"
"0","      "
"0","      # Calculate deviations and effect sizes"
"0","      deviations <- data.frame()"
"0","      for (var in characterization_vars) {"
"0","        cluster_val <- cluster_data[[var]]"
"0","        overall_val <- overall_means[[var]]"
"0","        "
"0","        # Calculate absolute difference and standardized effect size"
"0","        abs_diff <- cluster_val - overall_val"
"0","        "
"0","        # Calculate pooled standard deviation for effect size"
"0","        pooled_sd <- data_with_clusters[, sd(get(var), na.rm = TRUE)]"
"0","        effect_size <- abs_diff / pooled_sd"
"0","        "
"0","        # Determine if difference is meaningful (|effect size| > 0.2)"
"0","        if (abs(effect_size) > 0.2) {"
"0","          deviations <- rbind(deviations, data.frame("
"0","            variable = var,"
"0","            cluster_value = cluster_val,"
"0","            overall_value = overall_val,"
"0","            absolute_difference = abs_diff,"
"0","            effect_size = effect_size,"
"0","            stringsAsFactors = FALSE"
"0","          ))"
"0","        }"
"0","      }"
"0","      "
"0","      # Sort by absolute effect size"
"0","      if (nrow(deviations) > 0) {"
"0","        deviations <- deviations[order(abs(deviations$effect_size), decreasing = TRUE), ]"
"0","        "
"0","        # Show top 3 distinctive features"
"0","        top_features <- head(deviations, 3)"
"0","        "
"0","        for (j in 1:nrow(top_features)) {"
"0","          feature <- top_features[j, ]"
"0","          direction <- ifelse(feature$effect_size > 0, ""higher"", ""lower"")"
"0","          magnitude <- ifelse(abs(feature$effect_size) > 0.8, ""much"", "
"0","                             ifelse(abs(feature$effect_size) > 0.5, ""moderately"", ""somewhat""))"
"0","          "
"0","          cat(sprintf(""  • %s: %.3f (%s %s than average, effect size = %.2f)\n"","
"0","                      feature$variable, feature$cluster_value, magnitude, direction, feature$effect_size))"
"0","        }"
"0","      } else {"
"0","        cat(""  • No distinctive features (cluster close to overall average)\n"")"
"0","      }"
"0","      "
"0","      # Add resilience rate if available"
"0","      if (""RESILIENT"" %in% names(data_with_clusters)) {"
"0","        cluster_resilience <- data_with_clusters[cluster == i, mean(RESILIENT, na.rm = TRUE)]"
"0","        overall_resilience <- data_with_clusters[, mean(RESILIENT, na.rm = TRUE)]"
"0","        "
"0","        cat(sprintf(""  • Resilience rate: %.1f%% (overall: %.1f%%)\n"", "
"0","                    cluster_resilience * 100, overall_resilience * 100))"
"0","      }"
"0","    }"
"0","  }"
"0","  "
"0","  # Enhanced educational recommendations"
"0","  cat(sprintf(""\n--- %s Level Educational Interpretation ---\n"", "
"0","              tools::toTitleCase(clustering_type)))"
"0","  "
"0","  # Identify cluster types based on patterns"
"0","  if (clustering_type == ""micro"") {"
"0","    "
"0","    # Analyze cluster patterns"
"0","    cluster_summary <- data_with_clusters[, .("
"0","      n_students = .N,"
"0","      mean_belong = mean(BELONG, na.rm = TRUE),"
"0","      mean_teachsup = mean(TEACHSUP, na.rm = TRUE),"
"0","      mean_escs = mean(ESCS, na.rm = TRUE),"
"0","      mean_math = mean(MATH_AVG, na.rm = TRUE),"
"0","      resilience_rate = mean(RESILIENT, na.rm = TRUE)"
"0","    ), by = cluster]"
"0","    "
"0","    cat(""\nCluster Types Identified:\n"")"
"0","    "
"0","    for (i in 1:nrow(cluster_summary)) {"
"0","      cluster_info <- cluster_summary[i, ]"
"0","      "
"0","      # Classify cluster type based on characteristics"
"0","      if (cluster_info$resilience_rate > 0.3) {"
"0","        cluster_type <- ""High Resilience"""
"0","      } else if (cluster_info$mean_belong > -0.1) {"
"0","        cluster_type <- ""Socially Connected"" "
"0","      } else if (cluster_info$mean_teachsup > 0.1) {"
"0","        cluster_type <- ""Teacher-Supported"""
"0","      } else if (cluster_info$mean_math > 450) {"
"0","        cluster_type <- ""Academically Capable"""
"0","      } else {"
"0","        cluster_type <- ""Multi-Risk"""
"0","      }"
"0","      "
"0","      cat(sprintf(""  Cluster %d (%s): %d students, %.1f%% resilient\n"", "
"0","                  cluster_info$cluster, cluster_type, cluster_info$n_students, "
"0","                  cluster_info$resilience_rate * 100))"
"0","    }"
"0","    "
"0","    cat(""\nTargeted Intervention Strategies:\n"")"
"0","    cat(""• High Resilience clusters: Peer mentoring and leadership roles\n"")"
"0","    cat(""• Socially Connected clusters: Collaborative learning approaches\n"")"
"0","    cat(""• Teacher-Supported clusters: Enhanced academic scaffolding\n"")"
"0","    cat(""• Academically Capable clusters: Enrichment and challenge programs\n"")"
"0","    cat(""• Multi-Risk clusters: Intensive, multi-component support\n"")"
"0","    "
"0","  } else {"
"0","    cat(""Strategic Policy Interventions:\n"")"
"0","    cat(""• Design differentiated support programs for each resilience profile\n"")"
"0","    cat(""• Allocate resources based on cluster-specific risk factors\n"") "
"0","    cat(""• Develop targeted teacher training for different student types\n"")"
"0","    cat(""• Create policy frameworks addressing distinct disadvantage patterns\n"")"
"0","  }"
"0","  "
"0","  return(cluster_profiles)"
"0","}"
"0",""
"0","# Apply the fixed function"
"0","cat(""\n=== CORRECTED EDUCATIONAL INTERPRETATION ===\n"")"
"1","
=== CORRECTED EDUCATIONAL INTERPRETATION ===
"
"0","micro_insights_fixed <- generate_educational_insights_fixed(optimal_micro_analysis, ""micro"")"
"1","
--- Educational Insights: Micro Level ---
"
"1","
Cluster Characterization (Mean Values):
"
